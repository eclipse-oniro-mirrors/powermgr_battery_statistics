# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

domain: POWERMGR

POWER_RUNNINGLOCK:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: runninglock state}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  STATE: {type: INT32, desc: runninglock state}
  TYPE: {type: INT32, desc: runninglock type}
  NAME: {type: STRING, desc: runninglock name}

POWER_SCREEN:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: screen state}
  STATE: {type: INT32, desc: screen state}
  BRIGHTNESS: {type: INT32, desc: brightness level}

SCREEN_ON_TIMEOUT:
  __BASE: {type: FAULT, level: CRITICAL, desc: screen on timeout }
  PID: {type: INT32, desc: session pid}
  UID: {type: INT32, desc: session uid}
  PACKAGE_NAME: {type: STRING, desc: package name}
  PROCESS_NAME: {type: STRING, desc: process name}
  MSG: {type: STRING, desc: screen on timeout message}

POWER_BATTERY:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: battery info}
  BATTERY_LEVEL: {type: INT32, desc: battery level}
  CURRENT_NOW: {type: INT32, desc: battery current}

POWER_TEMPERATURE:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: device temperature}
  NAME: {type: STRING, desc: device temperature level}
  TEMPERATURE: {type: INT32, desc: device temperature level}

POWER_WORKSCHEDULER:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: workscheduler message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  TYPE: {type: INT32, desc: workscheduler message}
  INTERVAL: {type: INT32, desc: workscheduler interval}
  STATE: {type: INT32, desc: workscheduler state}

POWER_PHONE:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: phone call message}
  STATE: {type: INT32, desc: phone call state}

POWER_FLASHLIGHT:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: flashlight message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  STATE: {type: INT32, desc: flashlight on or off}

POWER_CAMERA:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: camera message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  STATE: {type: INT32, desc: camera on or off}

POWER_AUDIO:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: audio message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  STATE: {type: INT32, desc: audio on or off}

POWER_SENSOR_GRAVITY:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: gravity sensor message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  STATE: {type: INT32, desc: gravity sensor on or off}

POWER_SENSOR_PROXIMITY:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: proximity sensor message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  STATE: {type: INT32, desc: proximity sensor on or off}

POWER_RADIO:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: radio message}
  STATE: {type: INT32, desc: radio state}
  SIGNAL: {type: INT32, desc: signal level}

GNSS_STATE:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: GNSS location status}
  STATE: {type: STRING, desc: start or stop}
  PID: {type: INT32, desc: PID value}
  UID: {type: INT32, desc: UID value}

BLUETOOTH_BR_STATE:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: bluetooth br message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  BR_STATE: {type: INT32, desc: br state}

BLUETOOTH_SCAN_STATE:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: bluetooth scan message}
  PID: {type: INT32, desc: application pid}
  UID: {type: INT32, desc: application uid}
  BR_SCAN_STATE: {type: INT32, desc: br scan state}

WIFI_STATE:
  __BASE: {type: STATISTIC, level: MINOR, tag: PowerStats, desc: start or stop wifi AP message}
  TYPE: {type: STRING, desc: sta or ap}
  OPER_TYPE: {type: INT32, desc: operation type, enable or disable}